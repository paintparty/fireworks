;; Shape and documentation of a single token stylemap in a :theme entry

;; Example applies to any token stylemap in the :classes, :syntax,
;; or :printer entries under :theme

;; For :color or :background-color, val should be one of the following:

;; For a token's `:color` or `:background-color`, the value must be a string
;; which is a valid css hex(a) color. This hex will be used for both browser
;; dev consoles and terminal consoles. Your terminal must support 24bit
;; (TrueColor) , and you must explicitly set
;; `FIREWORKS_ENABLE_TERMINAL_TRUECOLOR="true"` in order for the colors to
;; render as expected. If `FIREWORKS_ENABLE_TERMINAL_TRUECOLOR` is set to its
;; default value of `false` (which is desirable if you are using a terminal
;; that does not support 24bit color such as the Terminal app on macOS),
;; then all theme colors will be automatically converted to their closest
;; `x256` equivalents.

{:highlight {:color            "#7A3E9D"
             :background-color "#ffee00"
             :font-style       :normal  ;; :italic | :normal(default)
             :font-weight      :bold    ;; :bold | :regular(default)
             }}



;; EXAMPLE FULL FIREWORKS THEME

;; The only required entries are :name, :mood, and :theme.
;; All others are optional.

;; NOTE - Values of entries in the :classes, :syntax, or :printer maps that
;; are keywords which correspond to the keys of the :classes map will inherit
;; that value, as specified in the :classes map.

{
 ;; REQUIRED.
 ;; The name of your theme.
 ;; Must begin with capital letter and end with " Light", or " Dark".
 ;; Must satisfy (clojure.spec.alpha/and
 ;;                string? #(re-find #"^[A-Z][^\n\t\r]* (?:Light|Dark)$" %))
 :name             
 "Alabaster Light" 
 
 ;; Single sentence description. Optional.
 :desc             
 "Based on @tonsky's Alabaster theme."
 
 ;; Multi-sentence, or multi-paragraph description. Optional.
 :about            
 "This is additional documentation.  You can go into more detail here."
 
 :url              
 "url goes here"

 ;; REQUIRED.
 ;; "light" | "dark". Defaults to "light"
 :mood             
 "light"
 
 ;; Optional.
 :author           
 "Author Name"

 ;; Optional.
 :langs            
 ["Clojure" "ClojureScript" "Babashka"]

 ;; Controls contrast of rainbow brackets, defaults to "low". Optional.
 :bracket-contrast
 "high"
 
 ;; REQUIRED.
 :tokens           
 {:classes {:foreground {:color "#585858"} 
            :bracket    {:color "#888888"}
            :string     {:color "#95CB82"}
            :comment    {:color "#5f875f"}

            ;; By default extends to numbers, symbols, keywords,
            ;; boolean values
            :constant   {:color "#c0a1bf"}

            ;; By default extends to all global definitions
            :definition {:color "#71ADE7"}

            ;; commentary from the printer, or user-supplied
            ;; commentary displayed with the printed output
            ;; default bgc, inherited by [:printer :annotation]
            :annotation {:color      "#cf9150"
                         :font-style :italic}
            
            ;; default hightlighting style for find highlighting,
            ;; inherited by [:printer :find]
            :highlight  {:background-color "#ffee00"}

            :metadata   {:color            "#808080"
                         :text-shadow      "0 0 2px #ffffff"
                         :background-color "#e6fafa"}

            ;; literal labels, type labels, atom wrappers, etc.
            :label      {:color            "#808080"
                         :background-color "#ededed"
                         :text-shadow      "0 0 2px #ffffff"
                         :font-style       :italic} 
            
            ;; Experimental, not working yet
            
            ;; :modifier   :default ;; earmuffs, deref, unused-arg, whitespace


            ;; user-selection of text, should live in :syntax as it is relavant
            ;; for both :printer context and future-supported :editor context.

            ;; :selection  :default 
            }

  ;; The :syntax entry show below is identical to the :syntax entry in the
  ;; internal base theme within fireworks. You don't need to specify any of
  ;; these in your own theme, unless you want to override them with
  ;; different values.
  :syntax  {:string        :string
            :number        :constant
            :keyword       :constant
            :boolean       :constant
            :nil           :constant
            :symbol        :definition
            :regex         :string
            :def           :definition
            :local         :definition
            :local-binding :definition
            :function      :definition
            :class         :definition
            :lamda         :definition
            :datatype      :definition
            :record        :definition
            :multimethod   :definition

            ;; Experimental, not working yet
            ;; :modifier      :modifier
            ;; :selection     :selection
            }

  ;; The :syntax entry show below is identical to the :printer internal base
  ;; theme within fireworks. You don't need to specify any of these in your
  ;; own theme, unless you want to override them with different values, as
  ;; shown with the :function-args token.
  :printer {:default             :default
            :function-args       {:color "#cf9150"}
            :type-label          :annotation
            :metadata-label      :annotation
            :annotation          :annotation
            :ellipsis            :annotation
            :coll-trunction      :annotation
            :user-annotation     :annotation
            :find-in-output      :highlight
            :file-info           :annotation
            :line-number         :annotation
            :column-number       :annotation
            :file-info-separator :annotation
            :eval-fat-arrow      :default
            :seq-brace           :brace
            :lazy-seq-brace      :brace}}}

